/* 
 * Bitcoin cryptography library
 * Copyright (c) Project Nayuki
 * 
 * http://www.nayuki.io/page/bitcoin-cryptography-library
 * https://github.com/nayuki/Bitcoin-Cryptography-Library
 */

package io.nayuki.bitcoin.crypto;

import static org.junit.Assert.assertArrayEquals;
import java.util.Arrays;
import java.util.Random;
import org.junit.Test;


/**
 * Tests the functions of the CurvePointMath class.
 */
public final class CurvePointMathTest {
	
	@Test public void testTwice() {
		String[][] cases = {
			{"C6047F9441ED7D6D3045406E95C07CD85C778E4B8CEF3CA7ABAC09B95C709EE5", "1AE168FEA63DC339A3C58419466CEAEEF7F632653266D0E1236431A950CFE52A"},
			{"E493DBF1C10D80F3581E4904930B1404CC6C13900EE0758474FA94ABE8C4CD13", "51ED993EA0D455B75642E2098EA51448D967AE33BFBDFE40CFE97BDC47739922"},
			{"2F01E5E15CCA351DAFF3843FB70F3C2F0A1BDD05E5AF888A67784EF3E10A2A01", "5C4DA8A741539949293D082A132D13B4C2E213D6BA5B7617B5DA2CB76CBDE904"},
			{"E60FCE93B59E9EC53011AABC21C23E97B2A31369B87A5AE9C44EE89E2A6DEC0A", "F7E3507399E595929DB99F34F57937101296891E44D23F0BE1F32CCE69616821"},
			{"D30199D74FB5A22D47B6E054E2F378CEDACFFCB89904A61D75D0DBD407143E65", "95038D9D0AE3D5C3B3D6DEC9E98380651F760CC364ED819605B3FF1F24106AB9"},
			{"BF23C1542D16EAB70B1051EAF832823CFC4C6F1DCDBAFD81E37918E6F874EF8B", "5CB3866FC33003737AD928A0BA5392E4C522FC54811E2F784DC37EFE66831D9F"},
			{"34FF3BE4033F7A06696C3D09F7D1671CBCF55CD700535655647077456769A24E", "5D9D11623A236C553F6619D89832098C55DF16C3E8F8B6818491067A73CC2F1A"},
			{"8282263212C609D9EA2A6E3E172DE238D8C39CABD5AC1CA10646E23FD5F51508", "11F8A8098557DFE45E8256E830B60ACE62D613AC2F7B17BED31B6EAFF6E26CAF"},
			{"465370B287A79FF3905A857A9CF918D50ADBC968D9E159D0926E2C00EF34A24D", "35E531B38368C082A4AF8BDAFDEEC2C1588E09B215D37A10A2F8FB20B33887F4"},
			{"241FEBB8E23CBD77D664A18F66AD6240AAEC6ECDC813B088D5B901B2E285131F", "513378D9FF94F8D3D6C420BD13981DF8CD50FD0FBD0CB5AFABB3E66F2750026D"},
		};
		int[] p = CurvePointMath.getBasePoint();
		for (String[] cs : cases) {
			int pOff = rand.nextInt(5) * Int256Math.NUM_WORDS;
			int tempOff = pOff + CurvePointMath.POINT_WORDS + rand.nextInt(5) * Int256Math.NUM_WORDS;
			int[] arr = new int[tempOff + 72];
			for (int i = 0; i < arr.length; i++)
				arr[i] = rand.nextInt();
			System.arraycopy(p, 0, arr, pOff, CurvePointMath.POINT_WORDS);
			
			CurvePointMath.twice(arr, pOff, tempOff);
			CurvePointMath.normalize(arr, pOff, tempOff);
			assertArrayEquals(toInt256(cs[0]), Arrays.copyOfRange(arr, pOff + CurvePointMath.XCOORD, pOff + CurvePointMath.XCOORD + Int256Math.NUM_WORDS));
			assertArrayEquals(toInt256(cs[1]), Arrays.copyOfRange(arr, pOff + CurvePointMath.YCOORD, pOff + CurvePointMath.YCOORD + Int256Math.NUM_WORDS));
			assertArrayEquals(Int256Math.ONE, Arrays.copyOfRange(arr, pOff + CurvePointMath.ZCOORD, pOff + CurvePointMath.ZCOORD + Int256Math.NUM_WORDS));
			System.arraycopy(arr, pOff, p, 0, CurvePointMath.POINT_WORDS);
		}
	}
	
	
	@Test public void testAdd() {
		String[][] cases = {
			{"D8E2F51F86CCB79F9774D7F56EEB6D65E012076726EEDEA4C9BEDFC25C780AF1", "8546CF18D7F20800376CB6D6C6A3042F39E4DA8738EE9A81949DEEF77FE8CDFE", "F01DC6BB112FB5FFE8E77D173453DB479A368794B12B4AC616154B454B7A99CC", "C6A200D4B689220345C67D2F8FD3C9A4789A7A0139EFA829E783285E7B7099C7", "0DA4159113DA119C4D351FE5FA148433251B7868C80C68114FBD1ADDC660831F", "EA70B1A7FB90118F7491F47AE86596A5763D1BE2E58A122E75F137F677B97C8B"},
			{"4F49D384BDBAB681DA3612E6F31A460445EC2CFFEEDDFF2E1D6ABE0BDB483702", "A6154DAD136B01339E899F014D93E009E07ACFBF258024B3B8C6135627984143", "7A47CF13069A4E516A73E8FC0362B77088E842542B4F5CBDAAC77DB39508561C", "47E98EADBF4BE548F9DB09B2E4A36DE92049FFD5735651D5CDB794FB22A1A2A5", "0A10B520547BE0572A326FE3D375069BCC47B84F80BC5F6155B41C42DD059E93", "6E448864523A61FDF536576C799C2DB0F1782F7C1ACD9D89E854E778D370A3A7"},
			{"3D2602F0F70649CD7E03254326F24DECC79A7040A948AD5A21D97F3AE82A2AF9", "15528860FDA6A013614A58B7A80791AA6903CAC1C0BFFF13C0BFE6D80040B7DC", "FC6192342B488F5C1CC356F5B16E68C8C843375DFEB6F1D5E60586A223958AB6", "5A9C457E4AA9B0622401B7B6D1AA8A78D100557E37F01839BE4B008292FD19B8", "43FA9A65C8DE9F4B5E0CCC959C8CF1CBF59D58287AB34F84D79FCACFBF5AE138", "EA5DF38D09BE2155D88CD7A10FEC168D3281BEBBF1B6FAC1FB6A6E0FF7C61ECE"},
			{"8CD590E2FA6E47BA831510A742E31C5967282CC5AF705BB7EE05DDB1AE0A70CC", "3CC503DE45487E796B4E87B7E7805450A2411D2162390F8BB2F37F7A8BC0A43F", "2650633F2C463AE2C423A8370D37C89F9415DE52ED6E701C8208F0032D74BE9D", "41D7E50961A0C46258EF2EBC62165686F68773AB8F0C430504A50C65535F6B0A", "E683B66A22E2FA01B4B9BD2FCC1136A2634A65A9F29803C8F86FB9E953169F0B", "F7AC842DF72FE9E7872DB5671797A1856F9DC161EE6C26F016B1D1ED3DDFE877"},
			{"D4F1595AF9FCD0200007504053D531EBFAAFA9AD8B824CD41FD3CBF3A6F89CCF", "7543303D5AD16221371DECA33F883DBA7E70382A5EBF2B22F5BFC64548F67E09", "19DEF82A4CAC5A0D1C6A1328A3BF31ABC4C4739C700033B89A6964CB57ED72DC", "1E98A224F7A980BFB0EB601ED34BD549D8F6E9B5C9893CC0142621F48FD12301", "7994C996E639207E9B2BAC683AEED5F6554DA0D4573DF0C018201DA32F43658D", "E5BD7828F71A1471F16139D1955DFC2877C829CE2C2B4DA88F88CEBCAD32489D"},
			{"B4171048A82B057ECBB2410CB5CCA894FEFD753CB3DBF08F5AE7D1DA53B32460", "A612C60587A7471941A690D294EF44E5009CDB2C88609DA8E7A3F20851E061A4", "4E84C012316583837A181EED9F4B6B2C93180D59B8401AB9F000C1E794B63B56", "0A2248DD75A023B25710EB8D6F2202D2A8AFDDCB5A1D3167F24F32F989DEF523", "658CC032552673790961D1AA665BC5E6904E9C34B2BD188081F29EF01FA088B2", "2DA31FE2272C8C35E1A7A8C89630D4690B0D2BC852B4B99FEDBAB0144575DC7B"},
			{"6BF99F31F70956A43FF30A3DFE7015A1BDEA1C72D360BB0C2CBE9009E8EB8DF8", "F40A505797BD58F6474B5AA95C1660F9D471196CEEBB29944920325A71EE9EF7", "C2674E87CF2F148FA4CD5A5D7301C2F928D9324987B63150A6A23010C51179CD", "A35B2AB12251D0306F28E5A6BD68BBCA88681CF318746579A64A8532830F4283", "56A652E288A1243E0F110A5D5B1E27AD47B4A2A2CC0E00BA9F07385B9AE2D26B", "45DB788A74CB0A8F4EC82458B8008C0A3395D36851BACD07A2E346FED23D1455"},
			{"EC0CEBC10E8A40A62A79D6D71C188EFAEFE627DB850D8FC39CA98311EE9681E1", "B8A6D325F045E42750506BC316860DF05270A0034A6A3DF329AAC51ABD267E6B", "F05137FE20F64E3C0B134928A2697F1E7E530A4529CD6DDB4FA897BDB20CFFC4", "070E580DE65D8F984DB6E7CC08CFBA4B0A2684B0F1C30CB89B22AEE8DB81D4F4", "42B4614B78E06A98AF4F459C74E75DEBB462123FFD3C623060A10A245765597B", "E6C6C5BCF997A5717A01031AEDE414987625475CEC47E9E171F0C959E0A5D123"},
			{"A14224FC7C828F17F47CF41E993904837F146F4CEB3A580FC2D1C904C11C230B", "39088E64F90572C0A95EC6FE2169C95189E177A4E51E6A97156832177033DD28", "7DE79E3064BAC0E0C51D9CB0BE4E29D7D92E901506292CAABE373D7CA1602E1B", "2AC948DD8724036D0D7B3D3A61BCFDE20AFE50277F3F14BD03475617770B8EA9", "835937C7310E89CE70937D7E2DF2567FA15B12525CCCD13F266D2A5031B09111", "BA7FBA3C8751C14F9A0E650CFACA9176BC1A592671AA1CE9547D3007632A1455"},
			{"C152768B4ED3F7E3F0D680838C172402185556AB704FF0B0AA862ADDAD05824E", "CD5F61613C622615F1679D4AE82DE6CD886E51989FCBCBC769913F24C3D5252A", "D896C04205CAC67544C5176E8F257464EE19364A641442F0921A9E3C883237A5", "1BC74789D084C7C100C74466D9FF0DD5B195C57FB0A172ECDF9CAE26168A7D1E", "AD6C4498E4E18A48A905910601472E975EC00CBC89DD8714F27BD730533653CE", "1009AD5ABD73BCD7CC5C814CA9D2AEE18E90FD4127C8EC30C7217F6E794A7932"},
		};
		for (String[] cs : cases) {
			int pOff = rand.nextInt(5) * Int256Math.NUM_WORDS;
			int qOff = pOff + CurvePointMath.POINT_WORDS + rand.nextInt(5) * Int256Math.NUM_WORDS;
			int tempOff = qOff + CurvePointMath.POINT_WORDS + rand.nextInt(5) * Int256Math.NUM_WORDS;
			int[] arr = new int[tempOff + 144];
			for (int i = 0; i < arr.length; i++)
				arr[i] = rand.nextInt();
			
			Int256Math.hexToUint(cs[0], arr, pOff + CurvePointMath.XCOORD);
			Int256Math.hexToUint(cs[1], arr, pOff + CurvePointMath.YCOORD);
			System.arraycopy(Int256Math.ONE, 0, arr, pOff + CurvePointMath.ZCOORD, Int256Math.NUM_WORDS);
			Int256Math.hexToUint(cs[2], arr, qOff + CurvePointMath.XCOORD);
			Int256Math.hexToUint(cs[3], arr, qOff + CurvePointMath.YCOORD);
			System.arraycopy(Int256Math.ONE, 0, arr, qOff + CurvePointMath.ZCOORD, Int256Math.NUM_WORDS);
			
			CurvePointMath.add(arr, pOff, qOff, tempOff);
			CurvePointMath.normalize(arr, pOff, tempOff);
			assertArrayEquals(toInt256(cs[4]), Arrays.copyOfRange(arr, pOff + CurvePointMath.XCOORD, pOff + CurvePointMath.XCOORD + Int256Math.NUM_WORDS));
			assertArrayEquals(toInt256(cs[5]), Arrays.copyOfRange(arr, pOff + CurvePointMath.YCOORD, pOff + CurvePointMath.YCOORD + Int256Math.NUM_WORDS));
			assertArrayEquals(Int256Math.ONE, Arrays.copyOfRange(arr, pOff + CurvePointMath.ZCOORD, pOff + CurvePointMath.ZCOORD + Int256Math.NUM_WORDS));
		}
	}
	
	
	@Test public void testMultiply() {
		String[][] cases = {
			// Small multiples
			{"0000000000000000000000000000000000000000000000000000000000000000", null, null},
			{"0000000000000000000000000000000000000000000000000000000000000001", "79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798", "483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8"},
			{"0000000000000000000000000000000000000000000000000000000000000002", "C6047F9441ED7D6D3045406E95C07CD85C778E4B8CEF3CA7ABAC09B95C709EE5", "1AE168FEA63DC339A3C58419466CEAEEF7F632653266D0E1236431A950CFE52A"},
			{"0000000000000000000000000000000000000000000000000000000000000003", "F9308A019258C31049344F85F89D5229B531C845836F99B08601F113BCE036F9", "388F7B0F632DE8140FE337E62A37F3566500A99934C2231B6CB9FD7584B8E672"},
			{"0000000000000000000000000000000000000000000000000000000000000004", "E493DBF1C10D80F3581E4904930B1404CC6C13900EE0758474FA94ABE8C4CD13", "51ED993EA0D455B75642E2098EA51448D967AE33BFBDFE40CFE97BDC47739922"},
			{"0000000000000000000000000000000000000000000000000000000000000005", "2F8BDE4D1A07209355B4A7250A5C5128E88B84BDDC619AB7CBA8D569B240EFE4", "D8AC222636E5E3D6D4DBA9DDA6C9C426F788271BAB0D6840DCA87D3AA6AC62D6"},
			{"0000000000000000000000000000000000000000000000000000000000000006", "FFF97BD5755EEEA420453A14355235D382F6472F8568A18B2F057A1460297556", "AE12777AACFBB620F3BE96017F45C560DE80F0F6518FE4A03C870C36B075F297"},
			{"0000000000000000000000000000000000000000000000000000000000000007", "5CBDF0646E5DB4EAA398F365F2EA7A0E3D419B7E0330E39CE92BDDEDCAC4F9BC", "6AEBCA40BA255960A3178D6D861A54DBA813D0B813FDE7B5A5082628087264DA"},
			{"0000000000000000000000000000000000000000000000000000000000000008", "2F01E5E15CCA351DAFF3843FB70F3C2F0A1BDD05E5AF888A67784EF3E10A2A01", "5C4DA8A741539949293D082A132D13B4C2E213D6BA5B7617B5DA2CB76CBDE904"},
			{"0000000000000000000000000000000000000000000000000000000000000009", "ACD484E2F0C7F65309AD178A9F559ABDE09796974C57E714C35F110DFC27CCBE", "CC338921B0A7D9FD64380971763B61E9ADD888A4375F8E0F05CC262AC64F9C37"},
			{"000000000000000000000000000000000000000000000000000000000000000A", "A0434D9E47F3C86235477C7B1AE6AE5D3442D49B1943C2B752A68E2A47E247C7", "893ABA425419BC27A3B6C7E693A24C696F794C2ED877A1593CBEE53B037368D7"},
			{"000000000000000000000000000000000000000000000000000000000000000B", "774AE7F858A9411E5EF4246B70C65AAC5649980BE5C17891BBEC17895DA008CB", "D984A032EB6B5E190243DD56D7B7B365372DB1E2DFF9D6A8301D74C9C953C61B"},
			{"000000000000000000000000000000000000000000000000000000000000000C", "D01115D548E7561B15C38F004D734633687CF4419620095BC5B0F47070AFE85A", "A9F34FFDC815E0D7A8B64537E17BD81579238C5DD9A86D526B051B13F4062327"},
			{"000000000000000000000000000000000000000000000000000000000000000D", "F28773C2D975288BC7D1D205C3748651B075FBC6610E58CDDEEDDF8F19405AA8", "0AB0902E8D880A89758212EB65CDAF473A1A06DA521FA91F29B5CB52DB03ED81"},
			{"000000000000000000000000000000000000000000000000000000000000000E", "499FDF9E895E719CFD64E67F07D38E3226AA7B63678949E6E49B241A60E823E4", "CAC2F6C4B54E855190F044E4A7B3D464464279C27A3F95BCC65F40D403A13F5B"},
			{"000000000000000000000000000000000000000000000000000000000000000F", "D7924D4F7D43EA965A465AE3095FF41131E5946F3C85F79E44ADBCF8E27E080E", "581E2872A86C72A683842EC228CC6DEFEA40AF2BD896D3A5C504DC9FF6A26B58"},
			{"0000000000000000000000000000000000000000000000000000000000000010", "E60FCE93B59E9EC53011AABC21C23E97B2A31369B87A5AE9C44EE89E2A6DEC0A", "F7E3507399E595929DB99F34F57937101296891E44D23F0BE1F32CCE69616821"},
			// Large multiples
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364139", "2F01E5E15CCA351DAFF3843FB70F3C2F0A1BDD05E5AF888A67784EF3E10A2A01", "A3B25758BEAC66B6D6C2F7D5ECD2EC4B3D1DEC2945A489E84A25D3479342132B"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD036413A", "5CBDF0646E5DB4EAA398F365F2EA7A0E3D419B7E0330E39CE92BDDEDCAC4F9BC", "951435BF45DAA69F5CE8729279E5AB2457EC2F47EC02184A5AF7D9D6F78D9755"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD036413B", "FFF97BD5755EEEA420453A14355235D382F6472F8568A18B2F057A1460297556", "51ED8885530449DF0C4169FE80BA3A9F217F0F09AE701B5FC378F3C84F8A0998"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD036413C", "2F8BDE4D1A07209355B4A7250A5C5128E88B84BDDC619AB7CBA8D569B240EFE4", "2753DDD9C91A1C292B24562259363BD90877D8E454F297BF235782C459539959"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD036413D", "E493DBF1C10D80F3581E4904930B1404CC6C13900EE0758474FA94ABE8C4CD13", "AE1266C15F2BAA48A9BD1DF6715AEBB7269851CC404201BF30168422B88C630D"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD036413E", "F9308A019258C31049344F85F89D5229B531C845836F99B08601F113BCE036F9", "C77084F09CD217EBF01CC819D5C80CA99AFF5666CB3DDCE4934602897B4715BD"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD036413F", "C6047F9441ED7D6D3045406E95C07CD85C778E4B8CEF3CA7ABAC09B95C709EE5", "E51E970159C23CC65C3A7BE6B99315110809CD9ACD992F1EDC9BCE55AF301705"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364140", "79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798", "B7C52588D95C3B9AA25B0403F1EEF75702E84BB7597AABE663B82F6F04EF2777"},
			{"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", null, null},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364142", "79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798", "483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364143", "C6047F9441ED7D6D3045406E95C07CD85C778E4B8CEF3CA7ABAC09B95C709EE5", "1AE168FEA63DC339A3C58419466CEAEEF7F632653266D0E1236431A950CFE52A"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364144", "F9308A019258C31049344F85F89D5229B531C845836F99B08601F113BCE036F9", "388F7B0F632DE8140FE337E62A37F3566500A99934C2231B6CB9FD7584B8E672"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364145", "E493DBF1C10D80F3581E4904930B1404CC6C13900EE0758474FA94ABE8C4CD13", "51ED993EA0D455B75642E2098EA51448D967AE33BFBDFE40CFE97BDC47739922"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364146", "2F8BDE4D1A07209355B4A7250A5C5128E88B84BDDC619AB7CBA8D569B240EFE4", "D8AC222636E5E3D6D4DBA9DDA6C9C426F788271BAB0D6840DCA87D3AA6AC62D6"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364147", "FFF97BD5755EEEA420453A14355235D382F6472F8568A18B2F057A1460297556", "AE12777AACFBB620F3BE96017F45C560DE80F0F6518FE4A03C870C36B075F297"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364148", "5CBDF0646E5DB4EAA398F365F2EA7A0E3D419B7E0330E39CE92BDDEDCAC4F9BC", "6AEBCA40BA255960A3178D6D861A54DBA813D0B813FDE7B5A5082628087264DA"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364149", "2F01E5E15CCA351DAFF3843FB70F3C2F0A1BDD05E5AF888A67784EF3E10A2A01", "5C4DA8A741539949293D082A132D13B4C2E213D6BA5B7617B5DA2CB76CBDE904"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8", "D8975566D098BC58D56AC778EB2445A8BBBBFEA11A70E0AED7258D899E1C0613", "94E691957255FF0C5F2D79BBCDEAEA3C25DF63C268A10AF2E43E7B90E57E9252"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9", "0527CF8A882B7A8335CC794152791AAC0A2E3580F2375C4EABFA99861C8A90C1", "AE4C367F859C2FE818492912A3237E0C33A5ABA4E30874287281C44C5C9F032A"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA", "1FF4DDB68AF6AEB749B8107B38D76108C0C4562F8EFE6087E04575305516CAA5", "991A7CCA5073B7F44BCC834D6DFE90EB155EE54D774122E3B9387CD26B7A7156"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB", "64F6309019333DAF98303B4630EFCC46DEF0C895D16F830D140C833947F00E1B", "50E58E52650ED0DC8BB1D178A4B14187B4FD9EDC98A29327B5F2A7B4E6108115"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC", "2CB62EA7395B82DF182570F2ADC7326C7CC7FE8D1DB31A2071C5E831E3B0DF74", "A0FADE1641324FC1E4DE38568CE5124D9E161A82FDBC40F2DF4AADE4D58DCF56"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD", "3FBEAC6EF73D496E597DAB76C75848E2633CFE3A8492B360D7A21B223AFCE95D", "1A9128BFF344CA910E8334027DE4308B3ACABCFE6B9799C7A0BFDE45A6FACF67"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE", "E0A65740C1C5148111A8305938C56322FBF345A18CB90CF48A788961C6B3FF91", "8AAF0580FD9E8BE571E97BEF4A067FA7911DA0FF0E1A5F307FEA63E3ECD903AF"},
			{"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "9166C289B9F905E55F9E3DF9F69D7F356B4A22095F894F4715714AA4B56606AF", "F181EB966BE4ACB5CFF9E16B66D809BE94E214F06C93FD091099AF98499255E7"},
			// Random multiples
			{"45528A55356F7C32CA753F1E58627BC33863670A1072D9C8DD0663EB5691D87F", "86F12A5BDA1DB7F296B4F1545E417D2DABB28C1E7C96475B97D5AEB9FCAD71A5", "2FE6419626EB949DB7A6439C6D54A78D42AA596ED74F117E51A6E1CD7AF78C1A"},
			{"11D6DD13D560E703C7F0189140DF2F692B603EF57A5E10E29C3E163ACD1E8FF8", "E222674C42D1B962E51F11C4138A6A75E5ED73D16921C7D381DCA0692B2C172E", "90747484C1616B024139138492C716092E41F4A631015196022330B3C5BFF7CB"},
			{"E1E1DD6FBA9D293B4F5F46BE5A3F05A7BCE9CDBD8993BC0282DCF6B975D285F1", "75608FB5896949F01C5AB5C655C55B91E56AA40DEB0B66DEA9BFFAC718A8BE42", "5C75D5CA6ABC9F8171E6BBB4EF9B1BE632A2FB25BAB0E345548505ECC1F3A45E"},
			{"3CBD5DE8E80196F3F5DB4D925A29638E4BFE4A9A848A9424BAD5C46136837C1F", "A964798AE92F981676341BED95E95646FD357DE2929666FA967F605F3FB1C739", "06BCBB55BF3C38660C778029A64CECA44BD7AF9AE346164FA7BA5A99A292A899"},
			{"EFA4125849134857FBC1A97675A43B5DE6C1D268E2CA7AB1E179DB25F13DE00C", "4E3E7A7387C7D8AB2F90DF43191F2CF56FB4F09BF1B1ED66501E4E231E4D65A6", "855323DD2B0BDED7E96E641A97B5E4D1BCC97EA2A4453BEC003208C18896E9C1"},
			{"B177E15F7CF844C240A7749F332DF50A692A372D6AFFD786629686540C8E73F2", "79B63C33938948A2BEBF8670ED0A21AF7395584D644B0C7F2667A9672030B199", "089FFB15F84A98BE1BB2FABD4CFC9FC2B748EC158974D1B5A9AA5191ECB7E7D4"},
			{"9806E0E601FDE9777CFBA9BE56FE90453023E6B08F5BE6CB18555156DE3AB5C3", "2F413CA9CB2A6E15120B1FCB4F57E907AD3D54E5034A7D7D7EFADF59EF5BF50F", "F83C779A884E36D307E6B588B53F62A6407D6F8815708D831AE8102EE26940F3"},
			{"B26C14ECABF65120BC8786A981EDAD985E8C1D42B146D7F66A8759919B02AE11", "D5E97EFBB234E24B4CD39D59062E925A355901EE4D89899C638B4CD9B16CF829", "AF21FC31E958C61DC1C6DDA55E99444BF04E55940FA71B891540AA4AC94DA3BF"},
			{"F56A9E89525FF39CFE2D18BADA4E050D0875BF2A2C97237BAC9B0F31D191E250", "95CECE9600B90D3352E868A5B497F9D134C05A882CB1308FE583061DD6C59F24", "FC8B7A4555770FF9E05A96A3828141AE69B9B89A8E06DEA1D5B6DA42C95513B8"},
			{"6C2CE63745F8D521BF120F360FBCDC56C8411E177AB6637389E18D289257D435", "222D89AD4CB409AD7ADA41AB280D8D2BCC723DE7B8521CAFA03AD8C839D6CBD1", "C26957D3094F04B394A45E3DBCD11B631BD4F473D293D85E7E92457AB2F23737"},
			{"9CE2B3D4ECBB3CE8CBFEBC365D5B0EE3D1DCDE114F0A7944CF357A770D27A5E5", "0F92952B176BB2B66B7251016B6EF3A10979A7DD20E3DE017498F339B7D47740", "CE2E23AFDDB77590D6F2B6DA13AD70FA212B89A885FF44545CF7EADE9DBD1627"},
			{"8E237B486DE3BB3156BB7F1493F31E5709449113779B2E70C061BA6EC748DE5B", "62D8F6D03A41EB698D845B27E1CFD862A6D4E178B55DB4979AC0B01A84599E5C", "8B1926377D460E2A77F0687741DCF5E7B720A24E8189FE2D1706055FA0727B49"},
			{"BA83B8BB8081B74DE6B7A2F24D9AA80BEB36A8F3670F62715846C4B66B6BF55D", "8A841F13C93473387B2D6DB8F43C82EC80A561DFF790D0C02F54AC6E8BABE596", "981B5EA656254E84EFDB72552164DEAE0E6C452ED2A462763DDA1DFB7431775C"},
			{"1BEBE58F680EF4F9B05904AD0A06B28DA2796F5FCAD0EF7A6156DC5B981C89EA", "04F307974E735568BF7ED84D6D9E47C8CBF78362347216103D599233606E02EA", "EF06A534B729AB791C13F93567DAD39BC6A85EBAC3E607AD1045C4A2EC45ABAE"},
			{"FA4BB94494E7DD1FD59EA728946E17434EAA6D5E0B9BAE191581C55E6A04ADDF", "A705FDBBD5F8C8F64BED6F13D667357ED200EF4738FAAA9D253A3687C0F3E194", "14A40DDD8053BEF96529E8A6E4D96579AF294FEC43986AD483302250A91CB52E"},
			{"F30C65DFE796F9F5E72FFBF00A5693F69BFA56D4A9ABA2F12A7F19000E7D2884", "1B24B78E17D1CCC8BE2B901DBF3C9F36C3D0BE35A30E29B9425C17D06579C3AE", "5EE17B92E7C33F4B4376316AD409CFA729872F06AA70CACB3214B054FC17005C"},
			{"DF3A3DC1913CEB70718FA0A07118454B8D5CE9894E0AEF5E40DF7EB55E32D9DF", "DA4316FB9D85BF0485E0CE6380B99210F8BEA0CAF641684F98EF586BDD1295E5", "07860148AABDB47C310DEDAE95116E40858C1A0E2DD296D821618B3D822ED9EE"},
			{"771057BBA5B9C168F34204651C9BD9948CA7F819B717F213C020176BC47C01FE", "8BC8442E4B445DF8AE1A723104047B5B599A495A006521041D49819D9BBC4DC3", "CD655AAC8D8E1C69FFE8142D12B6445DA7CE239F115C63DB3CAA688C68143C99"},
			{"815A1EF6BB5458AD1567571AACF0B7DA2FB5D4307CB52059B1211F3A40469E0E", "C7EB10C596CD9AD02970170B8CA424C310A123589468E615AB1CCB08C0889F67", "26C39AD0442D3B294345EAEDA3316DC8BBE5FCB91677068CA6BF4E78D07CF2E6"},
			{"866924A28917A33FE144DB60B4D7A27F1DC8B0D26D63372F76E629642245A76B", "6058612C8520CB807E753132E14D497BFD9EC74B172356E5DDC78DA1D2AA97A8", "4EBF15D5285A619C6987D47079AF89E544C7987795C427939BC5728663295FC4"},
			{"FAE4AFECD392E1F88EEB28B8FF0C25569530B8DC7141B8061397AED9A49CF9F2", "F46E371AB5FD98A0ED4B15C92CFADECB0787319326A7E561DDD8A6C6080F8642", "1D2B15146F7A7171A1A2D66FB55F50AD970122E7F87F3754A6016D0A52818DE0"},
			{"3BFD4640F65AE89E5E46B027D969ABCF046AF5BDE20F8E923787DE6473811965", "4BF1E32C1B69D7E0B95726EB8DCF293FB9AFB5F4CBA7C00F95E2CCD4EE0FD14D", "725352959BE783B2E64055F76FF1EACE840FA43FA8F72DF4DB0889FF3E997DDC"},
			{"3DD6E832384E4C1283DEBF1CD9AF94484A6A4458D7FA88FCB853317E923BFEE1", "488CECBFED358EDE1CE51FCB9F2B34C23F7FEB67A800063AB8212871E1941D13", "FBE324AB8FA3C3A3B6D71281FE4555AC80689EA29453F43445D8B74257039F13"},
			{"CA0CCB9483483BD0601220B8A1E5A2F93ACAD18C794C9EB14C8AB7D8A4001E2E", "8013D6BC2F12A279617C93DE87FE85AEE7A9F82BD01274301DA32126A3D5E8AC", "BED9ED257D0CC0B956F192BCC1F00190A7D0293C222648EB600D28FB3F22CF66"},
			{"9C6236188056AC2CB99CC60FD38CED951590E004282480883BC88B74A1EAB3A7", "8333198B3B42E44586A25F0CF5371133220703B44C9B7612FD83ABBBBA4F78D8", "4C633A0CA354671CF632ED36F749C66BF9D979414ED52DCF04270A0A60224C7A"},
			{"F563BBA48829799D3D60E66AC9C0537D1DBDD32A1C2D893153A8384FEB0062D8", "2EE54FBB45B4B7A0BF8C5BA332B898D7AEDCCCE1B3E4CDA56872FF77FB1F7A2C", "7D5B84B9C5164DF9979C5DBFD6FC31D112939F196A9A437329A36742D5E51611"},
			{"406DC83D14DE5D2D272C480C42F5988AD6154ADCDBA66F1D03E7AA36693FF7D3", "D706B8D7ED2E83FC7AA5284DE94EDBDCAF9FA0D2E1F1C56341F1FBCC570B5612", "0EFD57AA3345E14F4F7F290C0FC924FA51FA2A069C8EC961999A2819C0ECCAFC"},
			{"B9199737B6E6C3126BB68D37E938ECCE04F6ECBEEDA1E9CBF10AA6138B5C842F", "7943A0C63E51D571184B2469BB371F4D5A2A66BB32E7BB44EB4974882BAD8B76", "9387384D13291F8DF67EC5EC862F1F5372503771811D5DAA4EFE190D75DD1A39"},
			{"4263B3E7A22922C05FFCE2E922CEEBC583B7E5C537C8A4F3572DA96BBA8813CB", "F1335E670E5CB076BA973C92B24C87BDA85B962416539B2111A4317B4BE9AE44", "106C70EE074A552FF61D885616003A1139D86A2845464F59C742677464DA2110"},
			{"F750484A92E6ED351C6D5CC9738085F62C5389C11E7C6BDFA292EFAF20D0AC1C", "3CA82E74725ED3A9D359AE58D094D2E5C327B3F7B1671452C3517842538FF204", "9EBA56838328AD2FD2091050C8DB174B7952B28CCF9E322E2A006958DA3FB625"},
			{"6E139E20DAF5E0F98D0F21B7648016579809019F9022DA7334EDD864E7916B3D", "46F45C0139653C58F80377522F5E43E53E16045A88053AC84A00FD5EA6BFEE7D", "743BA29A19E2F118037977B8A614D8DC2427D538C7198632AED237D48E6FE9DD"},
			{"1B4B9E14EAB0F76F57B01E1155548FF0CA5AB75C7B28B0EAD962662D875C6B74", "A173D134375B449EED2D28B941FF935EC3FCF66255BD6FB10CFD52C219E48812", "133B122DA45CC3DDC3E2B5C02E9D86F0AAF4FBE564EF5FCBA59CE87858569EAF"},
			{"098FF774AF194BEDF730A2E3E42D6BA9DCADA504B1610133296CFA4DEF20CE53", "3BA9C946D318B32252B212337E7DEAF1127FCE02210CD2E4487C28CE8E04307B", "4C5D9A560E8666AC90BCF88FD39A0BEB4D302D9B7AD0D5683A2F8D32ACD7C988"},
			{"02B36516F5976CF6C3CBD5D5663DB4E1C93DD67383EE79627BE8A1F2A93ED0AC", "FD01FA210DB77F9126F7559B5E0AF8927D4A4C45AE5233BAF025E5596AA13C58", "B95C7D1519CD85E075AE293A0272A7AAF2CB97F29B64A351A2C512CFF7DF6B49"},
			{"204FF2CC9F835A21B2FA49D7B3B712B6ACB2E3A98E1EF0326F7965DDE8E1133E", "9EDD38343D35B22C057D37199FBBC530B96E630BA7B4C9A7C5268CC38D626787", "2CCDAAEAE19F3A0A5FA1B2C3C03984DFAD390262DDE254832A1BFB5E4860DBE7"},
			{"C1D10168789CB7EAEDB80BE73491B572E8866F9C6A8BE13A219611D203E96DB4", "AED9D3D5B9DC1830A567A837F4ACC1A04EB5530BA7035A72C013F54E292834A4", "B967438FCEF87D8BE5EEBBDB336F7606E852E7229DC22DB14BA2B17FD7C9553B"},
			{"C279603B48CEFC3BDFAAF80F5548B11612C4BCB0746B19915977BB9B21C5F718", "ACD33DFB09D55BE1A21729408DF603253B55087555E4012D677756A02278906B", "660650032DBCABA6CAC73027FF78277287A7FBCC6CB4B4A769F4FDD6EC5F5C11"},
			{"7BCBA36D1148C7A5AC938CA14C19A947E69F230577C182E243EEA7539E5C544B", "7B5D4B743D6FA328DBE32D49C276B123C04887AEAEC01F117582E846F6F2255A", "35C32C24B0499A3968CBD609A32EB3627EA99A5798BF50BE8B28608BDBE5FACB"},
			{"59B5E4509B28E1EA788C777C73337E4DC4F465C8772DAD204C8EE5FAFE2D4645", "51471C106EE9BC9E4D46ACF6409FA3C13787835080B2FE921BB2CCF9699636A9", "8272B678EB7E805A0725BC709E2BB2AEA7F10F3A53DAE3512D6DC8EEBF1D137B"},
		};
		for (String[] cs : cases) {
			
			int pOff = rand.nextInt(5) * Int256Math.NUM_WORDS;
			int nOff = pOff + CurvePointMath.POINT_WORDS + rand.nextInt(5) * Int256Math.NUM_WORDS;
			int tempOff = nOff + Int256Math.NUM_WORDS + rand.nextInt(5) * Int256Math.NUM_WORDS;
			int[] arr = new int[tempOff + 552];
			for (int i = 0; i < arr.length; i++)
				arr[i] = rand.nextInt();
			
			System.arraycopy(CurvePointMath.BASE_POINT, 0, arr, pOff, CurvePointMath.POINT_WORDS);
			Int256Math.hexToUint(cs[0], arr, nOff);
			
			CurvePointMath.multiply(arr, pOff, nOff, tempOff);
			CurvePointMath.normalize(arr, pOff, tempOff);
			if (cs[1] == null && cs[2] == null)
				assertArrayEquals(CurvePointMath.ZERO_POINT, Arrays.copyOfRange(arr, pOff, pOff + CurvePointMath.POINT_WORDS));
			else {
				assertArrayEquals(toInt256(cs[1]), Arrays.copyOfRange(arr, pOff + CurvePointMath.XCOORD, pOff + CurvePointMath.XCOORD + Int256Math.NUM_WORDS));
				assertArrayEquals(toInt256(cs[2]), Arrays.copyOfRange(arr, pOff + CurvePointMath.YCOORD, pOff + CurvePointMath.YCOORD + Int256Math.NUM_WORDS));
				assertArrayEquals(Int256Math.ONE, Arrays.copyOfRange(arr, pOff + CurvePointMath.ZCOORD, pOff + CurvePointMath.ZCOORD + Int256Math.NUM_WORDS));
			}
		}
	}
	
	
	/*---- Helper definitions ----*/
	
	private static int[] toInt256(String s) {
		int[] result = new int[Int256Math.NUM_WORDS];
		Int256Math.hexToUint(s, result, 0);
		return result;
	}
	
	
	private static Random rand = new Random();
	
}
