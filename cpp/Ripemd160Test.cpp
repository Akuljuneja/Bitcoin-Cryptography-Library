/* 
 * Runnable main program that tests the functionality of class Ripemd160.
 * 
 * Copyright (c) Project Nayuki
 * http://www.nayuki.io/
 */

#include <cstdio>
#include <cstdint>
#include <cstring>
#include "Ripemd160.h"


#define HASH_LEN 20

#define ARRAY_LENGTH(name)  (sizeof(name) / sizeof(name[0]))


struct TestCase {
	const bool matches;
	const uint8_t expectedHash[HASH_LEN];
	const char *message;
};


int main(int argc, char **argv) {
	// ASCII test vectors
	TestCase cases[] = {
		// Standard test vectors
		{true, {0x9C,0x11,0x85,0xA5,0xC5,0xE9,0xFC,0x54,0x61,0x28,0x08,0x97,0x7E,0xE8,0xF5,0x48,0xB2,0x25,0x8D,0x31}, ""},
		{true, {0x0B,0xDC,0x9D,0x2D,0x25,0x6B,0x3E,0xE9,0xDA,0xAE,0x34,0x7B,0xE6,0xF4,0xDC,0x83,0x5A,0x46,0x7F,0xFE}, "a"},
		{true, {0x8E,0xB2,0x08,0xF7,0xE0,0x5D,0x98,0x7A,0x9B,0x04,0x4A,0x8E,0x98,0xC6,0xB0,0x87,0xF1,0x5A,0x0B,0xFC}, "abc"},
		{true, {0x5D,0x06,0x89,0xEF,0x49,0xD2,0xFA,0xE5,0x72,0xB8,0x81,0xB1,0x23,0xA8,0x5F,0xFA,0x21,0x59,0x5F,0x36}, "message digest"},
		{true, {0xF7,0x1C,0x27,0x10,0x9C,0x69,0x2C,0x1B,0x56,0xBB,0xDC,0xEB,0x5B,0x9D,0x28,0x65,0xB3,0x70,0x8D,0xBC}, "abcdefghijklmnopqrstuvwxyz"},
		{true, {0x12,0xA0,0x53,0x38,0x4A,0x9C,0x0C,0x88,0xE4,0x05,0xA0,0x6C,0x27,0xDC,0xF4,0x9A,0xDA,0x62,0xEB,0x2B}, "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"},
		{true, {0xB0,0xE2,0x0B,0x6E,0x31,0x16,0x64,0x02,0x86,0xED,0x3A,0x87,0xA5,0x71,0x30,0x79,0xB2,0x1F,0x51,0x89}, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"},
		{true, {0x9B,0x75,0x2E,0x45,0x57,0x3D,0x4B,0x39,0xF4,0xDB,0xD3,0x32,0x3C,0xAB,0x82,0xBF,0x63,0x32,0x6B,0xFB}, "12345678901234567890123456789012345678901234567890123456789012345678901234567890"},
		// Mismatches caused by slight perturbations
		{false, {0x9C,0x11,0x85,0xA5,0xC5,0xE9,0xFC,0x54,0x61,0x28,0x08,0x97,0x7E,0xE8,0xF5,0x48,0xB2,0x25,0x8D,0x30}, ""},
		{false, {0x9C,0x11,0x85,0xA5,0xC5,0xE9,0xFC,0x54,0x61,0x25,0x08,0x97,0x7E,0xE8,0xF5,0x48,0xB2,0x25,0x8D,0x31}, ""},
		{false, {0x9C,0x11,0x85,0xA5,0xC5,0xE9,0xFC,0x54,0x61,0x28,0x08,0x97,0x7E,0xE8,0xF5,0x48,0xB2,0x25,0x8D,0x31}, " "},
		{false, {0x0E,0xB2,0x08,0xF7,0xE0,0x5D,0x98,0x7A,0x9B,0x04,0x4A,0x8E,0x98,0xC6,0xB0,0x87,0xF1,0x5A,0x0B,0xFC}, "abc"},
		{false, {0x8E,0xB2,0x08,0xF7,0xE0,0x5D,0x98,0x7A,0x9B,0x04,0x4A,0x8E,0x98,0xC6,0xB0,0x87,0xF1,0x5A,0x0B,0xFC}, "aac"},
		// Random printable-ASCII test vectors of increasing length
		{true, {0xA7,0xAB,0x75,0xAE,0x5E,0x53,0xDB,0xA6,0xEE,0xA5,0x4B,0x2F,0x74,0xA0,0x8B,0xCB,0x03,0x99,0x1C,0xAA}, "7"},
		{true, {0x61,0x3C,0x79,0x61,0x1B,0xFC,0x3C,0x40,0x8F,0xB3,0x8C,0xEC,0x52,0xDF,0xF4,0x8D,0xC6,0x0B,0xF1,0x01}, "Zw"},
		{true, {0x33,0xBD,0x25,0x9D,0x8C,0x4E,0x0D,0x09,0xB5,0x21,0xCF,0xE5,0x6C,0x56,0xAA,0x78,0x62,0xA0,0xA7,0x2B}, "W5!"},
		{true, {0xB8,0x33,0x3A,0x95,0xDF,0x12,0xC2,0x23,0xA9,0xD4,0x52,0xB2,0x8D,0xA3,0x6B,0xE2,0x2B,0x6B,0x2F,0x78}, ";qgm"},
		{true, {0xBC,0x23,0x63,0x9E,0x82,0x00,0x78,0x78,0xBB,0x9C,0x13,0xEE,0x84,0x6B,0x57,0x99,0x55,0x9F,0x6A,0xD5}, "h1iLC"},
		{true, {0x2D,0xFC,0xBA,0xA5,0x2A,0x83,0x8A,0xCF,0x55,0xC2,0xBD,0xF7,0xF1,0x81,0x77,0x9D,0xEB,0x15,0x75,0xC1}, "\\*N:4s"},
		{true, {0xCA,0x33,0x47,0x80,0x06,0x74,0x6A,0x6D,0x26,0x75,0x14,0x07,0x66,0x2C,0x66,0xD2,0x3F,0x9E,0x6D,0xF3}, "%k+<_X'"},
		{true, {0x3F,0x70,0xE8,0xB4,0x06,0x29,0x2B,0x3C,0x7B,0x70,0x86,0xB1,0x0B,0x05,0xF9,0x15,0xF6,0x67,0x0D,0x67}, "v lZuX|I"},
		{true, {0x7D,0x1D,0x7F,0x46,0x8F,0x1E,0x60,0x21,0x3C,0x62,0x0B,0x8F,0xEC,0x05,0xE1,0x0A,0x47,0x29,0x16,0x29}, "@!xO n'@c"},
		{true, {0x69,0x27,0x12,0x11,0xB5,0x4A,0x66,0xB1,0x53,0x6E,0xC6,0xCB,0x34,0x52,0xE2,0x1D,0xC3,0xA9,0xBC,0x7B}, "0[]]i!\"B7="},
		{true, {0x4F,0x83,0x84,0xBE,0x0A,0x76,0xCF,0xF1,0xAA,0x2F,0x5D,0x70,0x37,0x23,0x0B,0xB3,0x3D,0x57,0x7C,0xE4}, "z\\\"&?Ka_K#A"},
		{true, {0xD6,0x2B,0x19,0x4B,0x2D,0xB7,0x3B,0x37,0x79,0x5F,0xA3,0x70,0x00,0x23,0x8F,0x22,0xD3,0x66,0x19,0xD4}, "<E`#7a8A@M`\\"},
		{true, {0xE4,0x7D,0x80,0xF5,0xB1,0x5B,0x7A,0x61,0x7F,0x88,0x85,0x4F,0x1C,0x0F,0x86,0x27,0x26,0xB4,0xAF,0x43}, "A^~Cp~nm[2%Se"},
		{true, {0xD8,0x00,0x0C,0x64,0x40,0xAC,0x79,0xD3,0xD7,0x7D,0x9A,0xC9,0x04,0x31,0x5B,0x25,0xAE,0x89,0xE8,0x49}, "=?e}nJz`l~~p_?"},
		{true, {0xB4,0x27,0xEF,0xA7,0xAB,0xA3,0x0F,0x0E,0xC7,0xCE,0x1F,0x2E,0xFE,0xE8,0x86,0x08,0x26,0xF5,0x63,0x74}, "wQi-E7-?_KU{Mv~"},
		{true, {0x19,0x18,0x47,0x7D,0xBC,0x42,0x19,0x89,0x43,0x26,0x36,0x31,0x48,0xF8,0x36,0x30,0xF6,0x1D,0x8F,0xEC}, "0XI!\"DTejM pp2Qz"},
		{true, {0x93,0x81,0x07,0x07,0x5F,0x39,0x93,0xEA,0x31,0x1D,0xF8,0x7E,0xF6,0xB0,0xB6,0x60,0x2A,0x10,0x0D,0xCD}, "YKcUZT<u\\8c16!Hxe"},
		{true, {0xDF,0x08,0x60,0x4B,0x0C,0x23,0x4B,0x54,0xF5,0xDE,0x66,0xC7,0x25,0x45,0x10,0x16,0xFD,0xA3,0x8D,0x5A}, "xIjGg]-T{yj(hJ4/~e"},
		{true, {0xED,0xA0,0x12,0x5D,0xC6,0xE5,0xC0,0x43,0xB5,0x0A,0x7A,0xBB,0x0D,0x9E,0x4A,0xA2,0x1D,0xB3,0x46,0xA5}, "c }Z|f*f?gzuk-JOn}("},
		{true, {0xFA,0x46,0xAF,0xCA,0x3D,0x9B,0x63,0x50,0x34,0x0F,0x4C,0xCF,0xAE,0x4C,0xA6,0x28,0xF3,0x4E,0x74,0x23}, "s-D~\\^MJfUDgl3`SCc,+"},
		{true, {0x64,0xC3,0x7E,0xFB,0x87,0xF0,0x2D,0xA3,0xA4,0x82,0x02,0x26,0xA4,0x5F,0xB4,0x55,0xB9,0xDC,0xE6,0x50}, "DU<07i]chF<,XvyOs)z3M"},
		{true, {0xEB,0xB7,0x49,0x2B,0xEE,0x69,0x59,0xA9,0xA2,0x00,0xDB,0xF2,0xD0,0x9A,0x3A,0x8D,0x59,0x09,0x14,0x33}, "zd xorp0-mq~`:cPHxZiR~"},
		{true, {0xE6,0x9E,0xB7,0x0C,0x4E,0xA9,0x08,0xA3,0x75,0x8C,0xEE,0xBB,0xDA,0xD8,0x3C,0xEC,0xDF,0x92,0x0D,0xC9}, "uh4#(C.C\\W^|Ax7'UYMXS]s"},
		{true, {0x57,0x7B,0x6F,0x9D,0xF0,0x7B,0x25,0x63,0x53,0x3B,0xD7,0x1D,0x48,0x21,0x69,0x74,0x8E,0x5C,0x38,0x33}, ":bK#'VFHu'PAO~`E@(H_;,]\\"},
		{true, {0x14,0xF4,0x41,0xC3,0xA1,0x65,0x16,0x6C,0x92,0xB7,0xA7,0xD2,0xD1,0x6C,0x9A,0x8B,0x69,0x13,0x0D,0xEA}, "u{go_);Z~+Z 67Al]IwueOu99"},
		{true, {0x21,0x7F,0xC7,0x75,0xF1,0x64,0x7E,0x62,0x07,0xA5,0xA9,0x4C,0x73,0x17,0x48,0x23,0x92,0xB6,0x5F,0x2D}, "g5?5pzBt3#B0eE0!bj;*:S8%;X"},
		{true, {0x77,0xF2,0xCF,0x04,0xA4,0x1A,0x77,0x2A,0x1A,0x50,0xD8,0x77,0xC2,0xD6,0xBD,0x44,0xF6,0x71,0x87,0xE7}, "g`~cyU~18Vhszb!sEEBJm!x~Ze2"},
		{true, {0x00,0x20,0x75,0x25,0x3C,0xFB,0x1C,0xD1,0xE8,0xB7,0xBF,0x34,0xF3,0x4A,0x7D,0xC4,0x34,0x9A,0x99,0x6A}, "q$:j-0+{K`9<lRy<NQm,/R:-{~PC"},
		{true, {0x50,0x5A,0x84,0x0B,0xEF,0xD6,0x3A,0xA0,0x80,0xB2,0xAA,0x65,0x98,0x98,0x86,0xA4,0x8F,0x5E,0x7B,0xFE}, "gpD0gy__X[FlvGzhGRCte^^V86As9"},
		{true, {0x95,0xD1,0xA3,0xB6,0x93,0x26,0x79,0x34,0xB8,0xB3,0xC3,0xFE,0xC9,0xC7,0x36,0xAA,0xC8,0x78,0x3B,0x72}, "-6[1`(qf*JZY(&]`.B.$*ri4jndH@D"},
		{true, {0xE9,0x86,0x35,0xFD,0xFE,0xB7,0x8E,0xA7,0xD9,0xF3,0xBE,0x50,0xC7,0xBB,0xA5,0x1D,0x61,0x80,0x17,0x66}, "V}`Oyt`17qz37&ke[Jf&C?/Qeiw-{$H"},
		{true, {0xC6,0x32,0x29,0xCD,0x71,0xAD,0x47,0xFA,0x3C,0xCE,0x02,0xDC,0xC9,0xEE,0x12,0xB6,0x57,0x4C,0xFB,0x11}, "D@~W`7c?{g_$jy>1BT|Lch3_RDFpE`'6"},
		{true, {0x57,0x4F,0x4B,0x41,0x98,0x56,0x42,0xD5,0xE0,0x14,0x42,0xFA,0x48,0xD8,0x44,0xEC,0xAF,0x1A,0xEA,0x4C}, "SkB!qU8-@Kiw](<5KM5=4?v[`?@Me'8j~"},
		{true, {0x7B,0x29,0x58,0x40,0xA7,0xA8,0x1C,0x0A,0xAE,0x53,0x0A,0xBA,0x2A,0x59,0x86,0xF1,0x8E,0x28,0x59,0xBF}, "%90u+j8\\u&qf 9&1FT'a?xZ{vxbI}Iqz$E"},
		{true, {0xB5,0xAB,0x29,0xB0,0xEF,0x24,0xA8,0x79,0x2E,0x49,0x01,0x3B,0xD7,0x29,0x4F,0x17,0x81,0xBB,0x7D,0x62}, "tJPhq&-t\\a,pF->~:3_^1m+^Nn</K(c!T4 "},
		{true, {0xDF,0xDE,0x37,0x8B,0x88,0x6C,0x6E,0x22,0xE4,0xAF,0x92,0x7B,0x26,0x76,0xE9,0xDE,0x91,0xC1,0x22,0xC8}, "jevce\"SJo0'bb->[BF`1oAAY?2y;h3G[G~]J"},
		{true, {0x21,0xD8,0xA0,0x74,0xD8,0x99,0x06,0x55,0x00,0xA0,0x7B,0xF2,0x3B,0x1D,0x23,0x11,0xDF,0xCE,0x38,0x61}, "V}QN-2XPNfz\"Ngq_:#4y2TyqP@\"f4~H69z))7"},
		{true, {0x05,0xEE,0x40,0x15,0x64,0x11,0x87,0x01,0xDF,0x47,0x39,0xA1,0x59,0x16,0x07,0xF6,0x0A,0xAE,0xFE,0xC4}, ":u'rQ4OJ!!%iyy)QZOzUeDqL/vdei7Dr-qSP Q"},
		{true, {0xEA,0x6C,0x7E,0x37,0x77,0x78,0xA4,0xF9,0x3A,0x9E,0x91,0x02,0x69,0x48,0x6F,0x5F,0x65,0x14,0xC6,0xAF}, "7YJ;'nyG6D>;owuzqZ6wRVs_'*Z'J?3zm}FJ4 R"},
		{true, {0xCB,0x4C,0x60,0x52,0xE5,0xE1,0x62,0x82,0x0A,0x2A,0x79,0xE2,0x86,0x88,0x09,0xCA,0x9D,0x31,0x55,0xAF}, "&CBo|c)KL%3)T;.ZGJK#aBMqv'~^>N}+WS{DBgMd"},
		{true, {0x0C,0xC5,0x71,0xAA,0x85,0xBB,0x93,0x43,0x12,0x31,0x88,0x5F,0xF2,0xC0,0xC4,0x03,0xAD,0x52,0x85,0x2F}, "')GV(P^!>!9|VocKUc`bDi312*)lhx}P'\\R8.N/33"},
		{true, {0x1A,0xC3,0xE4,0x2E,0xBB,0xD4,0x11,0x82,0xB5,0xF2,0xCF,0xC6,0xF5,0xD2,0x18,0x7C,0x64,0x05,0x40,0xEC}, "4)o@5;.7.>_|vcdNNKX4/GlGECm&wRDr.PM_ U};@2"},
		{true, {0x71,0x94,0x42,0xAC,0xF3,0xBF,0xF2,0x9C,0x83,0x76,0x3D,0x7A,0xA1,0xB9,0x2D,0x6E,0x7E,0x2B,0x89,0xB7}, "gj9RlD,Oi2I+ 9bofX6;j6OK!}.fKg,+qq@8 >`*=w$"},
		{true, {0x68,0x30,0xD2,0xDE,0x3B,0xF5,0xDA,0xF7,0xD8,0xFA,0x07,0x7A,0x44,0xB6,0xB0,0x27,0x07,0x56,0xA0,0x70}, "57%7\"rO4{*_^ag]UPFk]oCd EjXvh5m+BvuVXx\\pntTj"},
		{true, {0x60,0xE3,0x39,0x25,0x09,0xC1,0x61,0xD2,0xDA,0xC7,0x90,0x31,0xBF,0x90,0x49,0x81,0x2F,0x54,0x54,0xED}, "zk?*GZT#%Ar&/\\QV>\"*v*MuD(B|QJB%G-r|K)[XQ;#~ez"},
		{true, {0x9E,0xE7,0xF7,0x27,0xBB,0xC4,0xEF,0xFF,0xA0,0x14,0xD3,0xC8,0x8A,0x1F,0x8F,0xC0,0xB6,0x11,0x99,0x26}, "?E3RL0w 0tL1By]+l7iUNHCXcqPH<}e/8z*^'3Rl(J68Kh"},
		{true, {0xEA,0xC8,0x76,0x92,0x49,0xCC,0xAB,0x28,0x01,0x4B,0x3F,0xB2,0x8C,0x4E,0x2C,0x55,0xCF,0x05,0xC7,0x96}, "G?bggj&q=T@zew(O| Eh<sB{Xv5*>d$,8f4%>O'N!3[}/^S"},
		{true, {0x1A,0xCF,0xE2,0xDB,0xBF,0xEE,0x82,0x01,0x68,0x56,0xD2,0xC8,0xA1,0x38,0xDD,0x29,0xD1,0x51,0x11,0x29}, "jM{jn~31bFAqkYP,v?12`pysg0y4$t[vLt'agA/xQOd$o`}["},
		{true, {0x93,0xFD,0xC5,0x61,0x1D,0xA5,0xD0,0x6C,0x3B,0x6F,0xAF,0x4A,0x76,0x60,0xD3,0xF4,0xA5,0xBE,0x32,0x3B}, "~MiM8'3os3-U~fcItV&>ABL,BG8a +E>TcEFO~s8ii^Y7_M:U"},
		{true, {0xFB,0x94,0x1E,0x30,0x0A,0x19,0x23,0x03,0x29,0x3C,0xEA,0x51,0x55,0x5C,0x22,0x72,0x35,0xD0,0x3D,0x12}, "Wc}]AI5y\\SlWMltvrS9D\\@gN+5zHfSGmHV0ZaE3{m6<K18#m\"S"},
		{true, {0x68,0xFD,0x83,0xE9,0x0B,0x65,0xD3,0x22,0xE5,0x89,0x34,0xF5,0xBF,0x46,0x68,0xAD,0x1C,0x26,0x16,0x01}, "iw*SPVt-[2C.Q~IF@a\"Z9gZa+D/Wb*|4//30k/HOOZ~~u*~w& t"},
		{true, {0xB1,0xC5,0x4D,0x0B,0xA9,0xB0,0x4B,0x5D,0xB7,0x9C,0x78,0x3E,0xA2,0x89,0xD2,0x30,0xB6,0xF6,0x99,0x44}, "mR_E:@h!b;ezs[NjQ8(YH8c8pwV)_5i+[R,7718L.T{}3F/_<c?m"},
		{true, {0x50,0xE7,0x1D,0x4A,0x41,0x45,0x2C,0x68,0x44,0x75,0x57,0xE6,0xB5,0x1F,0x13,0xA6,0x0C,0x1B,0x2D,0x5D}, "htPSE[\\b5d~8)[GJW7dGwee0D0;XCd{k`YWw}8 |@!g}v!byANVBj"},
		{true, {0x26,0x68,0x59,0x29,0xE5,0x31,0xDE,0xB3,0x06,0x13,0x74,0xA4,0x91,0xD4,0xC6,0x89,0x4D,0x1F,0x85,0xB1}, "600XTmm(sDg.Q1~?1fgsNc\"u\\ps\"lIR&+ktU^a{\"t@W?!Chc]\\A~:a"},
		{true, {0x7C,0x8B,0xF5,0x0A,0xB3,0x81,0x34,0x7B,0xDF,0xB8,0xEA,0x0A,0xE5,0x38,0x73,0xD4,0x2C,0x93,0x89,0xD5}, "3DgU\\g'IRLPS/fZV16tu<>-Xq:-$3GWV4.pnM|ZPUX44y8mD@\\EFJ/r"},
		{true, {0x05,0x51,0x9C,0xB9,0xB7,0x6D,0x2D,0x66,0xD9,0x20,0x6A,0xDB,0xEF,0xCB,0x2D,0x8F,0x0C,0x2A,0x60,0x60}, "\\JMJyRHaWF-T8>1/z@U5w:FkBZuK}<[ SQbTMoUcPW<;#K?1`P7j ,}V"},
		{true, {0x62,0x2E,0xDE,0xC7,0xD5,0xCD,0x80,0x42,0x2E,0x42,0xC6,0xC7,0x96,0x6E,0x26,0xFA,0x36,0x98,0xB7,0x3B}, "Wrh^q02KEd,TY`o0(O[[#c6@0PE xz{v$=l\\G3(40hT?~)kW!ON+Q10=F"},
		{true, {0x20,0x56,0x1A,0x54,0xEC,0xDF,0xAE,0x8B,0x41,0xFB,0x0E,0x0E,0xA8,0xB9,0xA9,0xA8,0x76,0x83,0xD2,0x0D}, ".f2CegT06$UIO&_7jU}$qw+Ns7--j-  \\3XE^)/+Hzz7kOQyPI:QXA%fir"},
		{true, {0xF9,0x14,0x25,0x51,0x3A,0xF0,0x0C,0x63,0x7C,0xCE,0xC3,0xD8,0x2E,0xF2,0x4D,0xEC,0xF7,0xBD,0xE7,0x5F}, "YAH`Odube^oqNi`=&_ewVv!x;uy95A4yLL4lV0HG9a\\l@guA9OQ;:CAaPr;"},
		{true, {0xD5,0xD6,0x75,0x20,0x9C,0xBF,0xF9,0xA9,0x9C,0xC5,0x9A,0x89,0xB5,0xD1,0x3A,0x86,0x10,0x4D,0x24,0x32}, "z]qo'xcTx>QE(JW{;+{o\"Y'_k>,l(jNR`l4{T,!I mC4CVj@l5H1Q\"WAw=?0"},
		{true, {0xF2,0x68,0x97,0xC7,0x49,0x01,0xAA,0xC2,0x96,0xE7,0x0A,0xBA,0xBD,0x90,0x55,0x16,0xC3,0x56,0x53,0x69}, "k-|uN*@\\\\=dE=JZQ)MRQ\"{*wud[;.}{W<cvyw*qW vwM6X\"<9R!>/$05z E(("},
		{true, {0x2B,0x81,0x9D,0x03,0xF3,0xE8,0x33,0x1B,0x4C,0x6B,0x34,0x90,0x2D,0x3E,0xF9,0x23,0xAE,0x7C,0xF8,0xBE}, "S{<mA*L:oc/_Rb5^pTZ[Akt_t)MR0dDsN'mqKh?bTN8Z's~9xI4FH7F8v-JnH^"},
		{true, {0x54,0x48,0xA7,0x04,0x88,0xE0,0xEB,0xEC,0x58,0x39,0xA0,0xCB,0xF8,0xB1,0xF1,0xEE,0xC7,0xF5,0xC6,0x21}, ":c'HdxrHY{v)7Z]IxWh8\"EN)MP8IEvrxs`C(,L{\"y$J{kXF5,SO%=.X_5c[TDLm"},
		{true, {0x4B,0x89,0x69,0xCE,0x6A,0x0F,0x7A,0x4C,0xD5,0xCB,0x56,0x2E,0x52,0x1F,0x26,0x14,0xB9,0xDB,0x6F,0x81}, "BvkJT%!\",E$T0x5'z.>cPU#3Qxz;v[`'(\"zT.,k9lAR}PH~BO?Ub!ZG zC\\sk--Y"},
		{true, {0x32,0x6E,0xEA,0x31,0xD5,0x41,0x47,0x9B,0x46,0x0D,0xCE,0x09,0x5F,0x98,0xEA,0x31,0xFF,0x56,0x70,0x79}, "(ENsp\"46'6NZz#G<|g_0@}qSasqNeN^(emx#S@\\te!/u.tx5Hz%z}#k9k;@lLpo>_"},
		{true, {0x01,0x21,0xDF,0x11,0xD9,0x22,0x80,0xEF,0x98,0x35,0x97,0xDD,0xD1,0x07,0x7A,0x7D,0xDC,0x72,0xDF,0x3A}, ")gQ 8G[N0D#me6/RXX\\C\"q^_~=.$bm(^L.|(JenW/!<a_{4e](6W-:+gMEJx|l+2EF"},
		{true, {0x62,0x52,0x2B,0x6C,0xCD,0xD9,0x10,0x17,0x89,0xD1,0x4E,0xB8,0xD4,0x67,0x7D,0x43,0xEC,0x7A,0x50,0x38}, "[Lg^ L#N4>)|c*\"$aG#`ae0]7UCdU/{|WtX=0y=s_7#[I(=24YID}naTNlfp@H=G7B3"},
		{true, {0xFF,0xAB,0x6D,0xB7,0xB9,0x2C,0x66,0x3D,0x14,0x18,0xD3,0x7F,0x9D,0xE2,0xF1,0x6C,0xB5,0xD5,0x32,0x7F}, "[)b_wsb)>0)M<8$|$#p<.9^g[G MgI'c**#:\\zXQ3LS(_m`+cK][ 1)o.Sn+XiYx\"KBh"},
		{true, {0x07,0x97,0xA9,0x89,0xBE,0xAE,0x56,0x45,0xE3,0x2E,0x92,0x86,0xF4,0xCF,0x9E,0x79,0x04,0xD3,0x35,0x67}, "Sr)+VvXSWyDy#z.+:bOW6^|pJR,_834m#g0BdEks2lzdnOA:\\mxR2<OR0lOBBcdKfWb`X"},
		{true, {0x13,0xD5,0x43,0x52,0x62,0x99,0x7B,0xB0,0xC9,0x8D,0xB4,0x95,0xCF,0xDC,0x00,0x3C,0x1B,0xDC,0x26,0x2E}, "kRA^BYA]n>{.y|Ed{Ph1z(q#&fAvk?i3xqQ3b*QM*:UgUe5mLZIf9RW[x3\\kLbo]^1G4\"J"},
		{true, {0x1F,0x06,0xB8,0x57,0x2E,0x43,0x31,0x35,0x81,0x61,0x55,0x60,0x63,0x82,0xD2,0x69,0x4C,0x1F,0x31,0x00}, "U]uFU`Hc4bW%xn\"ZtWtlkp$^09d2akWa&:.yOR56tv#g~b~ V,<y?uz3?daz:1na>|A`D}k"},
		{true, {0x44,0xB9,0xFB,0x65,0xCB,0xE9,0xCB,0x25,0x5C,0x1B,0x14,0x85,0xBA,0xE1,0xA6,0xB9,0x45,0x22,0x06,0xC4}, "DYdJ%>8Zd+2XGK*h]44i5SnD3GzL{E\"WlYxm!1:2:rc|#P2p9v,T<MMaK/}WI-$(c^L7LYU)"},
		{true, {0x85,0xD9,0xCE,0x88,0x2B,0xAF,0xD1,0x7D,0x93,0xF8,0xE9,0x04,0x16,0xAC,0xCC,0x57,0x4D,0x9C,0x58,0x6F}, "iHhe@Pb,LurC#>;,B`cnW/B;gGko'I#q[hgq(yXT5g>8>L0S|w09xMiU<AkHqSFh$tnZSfW5z"},
		{true, {0xAC,0x03,0x87,0xBA,0x11,0x3F,0x88,0x5F,0xC1,0x4B,0xBE,0xA9,0xD1,0xA8,0x0D,0xC3,0xFC,0xD6,0xF1,0xAC}, "y=QG!_MP~31vp[#'o}*,|A<_Z-;cmtR'ij`U@Lxj52wf9'T'@LQBW55fs\\S+}TYv_1 w2P[\\$\""},
		{true, {0x10,0x4C,0xFB,0xE7,0xF4,0xF1,0x6E,0x82,0xC0,0x46,0xEA,0x76,0x32,0x99,0x7B,0x27,0x06,0x5E,0x62,0x86}, "sIZG2ol/*4zyCl<r84Y6n:#%Q?phcN)&1>+hyXh{AXT=q(-<-kU6>e(?3v%+dDp$mY)LB%:.?Mi"},
		{true, {0x1F,0x25,0x4E,0x47,0x79,0xF7,0xDD,0x32,0x2E,0xAA,0x5E,0x4B,0x6A,0xF6,0xE1,0xE7,0x12,0x18,0x39,0x61}, "Nv5PQ:v(+Cp=6suaC_gMo8~p_Dld$)B.7+)OpSBC?}|[OqIRel2R+K8^cU>29q}|%spD1SW8V8EB"},
		{true, {0xF2,0x40,0xD7,0x89,0x1E,0xF1,0xFF,0xCD,0x8A,0xC4,0x30,0x82,0x61,0xD9,0xE8,0xED,0x56,0x8D,0x04,0x18}, "T&qTGpE\\.Fcl~E: <\"V*'IIIdnC\"XKX<q\\2?BNl*L_5SyP!M{Cl0=}i7ovXdPAm*rAnA*LK0v;I`Y"},
		{true, {0x6B,0xAE,0x58,0xAB,0xF6,0xC4,0xA9,0x8F,0x7B,0xBD,0x7B,0x64,0xAA,0x6E,0x44,0xAE,0x1F,0x06,0x47,0x1F}, ".E`\"DU0tW=}~b(%O>m<J./>=Tplb&h9kT#.n=w`<ZxMG)a[RBX9<~i]Hh]b8&ca_Al#h!Z3rZSaO ;"},
		{true, {0x52,0x33,0x57,0x25,0x31,0xFB,0x16,0x1B,0xA0,0x57,0xAC,0x0B,0x47,0x88,0x98,0x62,0x16,0x28,0xB2,0xD9}, "H\\yo!UFMoc2i|Y/-$F<:[::h%yfu%-ItZ~6JE 9J.,G`D&{CVLn~nJmTg<E=_iImxq8 BuniP5vi0g~"},
		{true, {0x51,0xCE,0xE5,0x3B,0xE0,0x2F,0xA8,0xB8,0x2E,0x6A,0xCB,0xF3,0x5F,0xD0,0x79,0x3D,0x9D,0xEA,0x84,0x59}, "Sl0.\\iiAI<ymxS>]H*<MF:G\\0<AU|n6[4:Moax^%m'yY}O^*C(bVSoyw=.'PBZ\\0\"GGv\\&X[HpnboXgb"},
		{true, {0x98,0xB8,0xA1,0x01,0x7B,0xFB,0x7A,0xBF,0xE3,0x14,0x98,0xC3,0x65,0x4E,0xB8,0x62,0xAB,0x99,0xDE,0xD7}, ".@q$w:dBUeP9Zd<Cc=U.=<MPEBtQ^oKNjViLY)LS$r^,B9:bNs.OD<[9lQ7D>&]Ow%?Kb!]s?\"/Ow7#-'"},
		{true, {0xD1,0x73,0xFF,0x99,0x85,0xE1,0x78,0xCA,0x1E,0x67,0xCA,0xFE,0x97,0x33,0x90,0xD2,0x0A,0x46,0xB2,0xA4}, "|s=*WdDy\";%aQ2&ws.H8[}#5L>s+M 8!nFa)(Irwat&`@ jx4{C#Tx3v=WkmmqGL\\,u&7lGL)\"<C_=\"yhm"},
		{true, {0x31,0xC7,0x38,0x2E,0xE4,0xDD,0x0B,0x59,0x83,0x7B,0xE4,0x0F,0x19,0x96,0xDD,0xB6,0xE6,0xAA,0x43,0x78}, "+pZJ<mVtcIGa{Y~F0?)/1hK@%y!< kprFlV5c;6=r~?v&Z)x:%~w~\\GGiE+w'yp#FWpq])S54{E<MqQz{t!"},
		{true, {0x42,0x44,0x2C,0x77,0x97,0x3A,0x38,0x24,0xE3,0x5D,0x40,0x8F,0x3B,0x7F,0xB8,0x5D,0x80,0x68,0x65,0x7B}, "YIg`Ga(rYi+]5DzwG,LP;FSY8+=2GZNVU(va2(cSf.;6j})X-+;h,$ jGo[KFYHN5wcK2:Ek:=Jz*&(SY\\8&"},
		{true, {0xFB,0x03,0x11,0xCB,0x9C,0x19,0x34,0xAB,0xA9,0x9C,0xB0,0x0A,0x91,0x7C,0xCA,0xEB,0x28,0x4E,0x9F,0x41}, "}C\\>x#EWfD,de(IG9<StN8WRCh2G?,eE/_@ox(5eqft:vc5gOhqGPIymY(n[gWjJ`R;m]FIx@>n\">0tRC>yH@"},
		{true, {0x2B,0x08,0x00,0xE9,0x5C,0xA2,0xE0,0x49,0x3F,0x6B,0x98,0xCF,0x38,0xD2,0x0D,0x07,0x42,0x79,0x70,0xEB}, "zpn-cTEUts\"A3+/91o;?GHlOz4~ }?|XFd,Gq#>N L{`AJ3_Zk^BD2]WFt~-3~F>!Lw^`;(lmCgk0Kq}f@un2c"},
		{true, {0x1B,0x57,0x13,0x49,0x34,0xA9,0xB1,0x62,0x89,0xD3,0x3C,0x53,0xB1,0xDC,0x9B,0xA7,0xCD,0x2E,0xA3,0x9B}, "5M\\^lb5.! (93i,'iRg'',owg,]:x}662<kmS!&MMu~cE^(jH>>)A}.I+^|aI./9](e9jsH< d.y)N%o3X:TzwO"},
		{true, {0xEA,0x4A,0x01,0xC2,0xA2,0xC0,0x84,0x3F,0x08,0x32,0x3D,0x2A,0xD6,0xC4,0x0D,0x8C,0x0C,0xE7,0x6F,0x69}, "$^+F825k@7MxGimL-~.JB>>U\"X+Uv+T<}4|r'^~8uV]~|zoj@P8P`QKmJsukDwNW\"pH1$C6tGpM[X5\"x_IQ-`Y<#"},
		{true, {0x31,0x00,0x3B,0xF4,0x12,0x20,0x26,0xA3,0xAD,0xB6,0xDF,0x95,0x3E,0x69,0xB7,0x96,0x88,0x1F,0x26,0x14}, "gyVV\"Zxq1CH8&sn>O}L%zjDVO}$(QP)]JC}&IOp?'EM{D|OY^d(r;E`%4]+;OPf\\*w/oj4\\adgKH8?*X^I4~\\kTT?"},
		{true, {0xDC,0xCF,0x05,0xE3,0x42,0xF6,0x14,0xA4,0x97,0xC5,0x9D,0x13,0x4A,0xD6,0xB7,0x96,0x58,0x68,0xBE,0xFD}, "FAm{MogSYSUV]{h# p>>h0`HQ\"o~X%x&&-U4\"8t[r5mankt;i{ivjLNO^ax^&>]ur_Xn?)I=CxztG*\\w^af@->6D9L"},
		{true, {0x66,0x04,0xF4,0xE0,0xC9,0xF0,0xAA,0xC7,0x5E,0xD8,0xDD,0xE8,0xB1,0x09,0x4A,0x59,0x0C,0xAB,0xF4,0xFD}, "y~nOogR/ExXD>\"H^($,l]>%VsnxdD5d}vqxKr_[y._(p0=w-nn=i['K!p]b.m|;w4?nTU1w@c/9%8,I{$W|rpFxO\\Ba"},
		{true, {0xE2,0x51,0x51,0xCE,0x38,0x71,0xFE,0x6B,0xA4,0xDD,0x28,0xA9,0x48,0x5B,0x48,0xF4,0x1E,0x78,0xC5,0x48}, "4bgy=e?k8(9SJczbaRwI'.IBXJAT5]WO0QbfTU!BXA,LdYSI1DrI6;n Vn1D_.?W=<gOHw ifMOlbHeq1S!LeIh0I_&w"},
		{true, {0x66,0x97,0x0A,0x9A,0x2A,0x5E,0x29,0x21,0x79,0xD9,0x4F,0xDE,0x77,0xA9,0x1D,0x71,0xBF,0x02,0x56,0xF7}, ":qL,oZ_.r:H*W-:<^r<\\3uG}({_I fjPS<iw'@SJ`.y974pL;G_{t=6*65>@aA fJ4{oH|x:y&j(xz\\?zqgKS0GxfW3(&"},
		{true, {0xA0,0x48,0x1C,0x4F,0x6D,0x2E,0xDC,0xD1,0x3D,0x34,0xFE,0x33,0x7A,0xDA,0x08,0x02,0x7E,0x9C,0xC6,0x58}, "huN%[llDd Js\\uDrr%lT8Hd4mU,%LP4Yei&Diu`cX*4 W>c7R?C])3u2yt=IJ6I7\\>`\".2&s$<.^?lacn.n%BvT-G>OuAd"},
		{true, {0x74,0x46,0xE0,0x1F,0x15,0xDD,0xCB,0xCA,0xC5,0x1C,0x80,0x47,0xA9,0xD7,0x1E,0x20,0x3B,0x11,0x0E,0x94}, "XDw*tm2e1DRBy^>7h\\w=t'(|'khoaVY]21&3*W(@mL47J1>;Af#*vM;9[/6ib00m91Q-)^a7JtJ$otxn`$>,@){&3iOSRTc"},
		{true, {0xBE,0x00,0xB0,0x43,0xAF,0x19,0x22,0xD6,0x8A,0x41,0x37,0x11,0x3B,0xE5,0xFC,0x2E,0xD4,0x0A,0x4C,0x4C}, "2 U~x\\YAT~p1}!5/]pB:xN!;uE~S^4ba~+k8K=kbyY);BIpp3PBp[&M)3-$bu&_V&@'kIW#n2)D.;<B:`m8UXu85IR8C%|yZ"},
		{true, {0xEC,0x26,0x32,0x66,0x20,0xD3,0x7F,0xE9,0xC1,0x0E,0x0B,0x4B,0x38,0xBB,0x1A,0xC9,0xDD,0xB5,0x0C,0x70}, "%k)9EEA4(u(kBi}PEQlP|^?$[W99v,OaW%Cpzt9Lh8mG=Y|5,.WA)xJ]JLqNl3$X*1p$7}-x+LB/G7|tZRF+8F=*2EdsuOQM\""},
		{true, {0xE0,0x28,0x3B,0xD8,0x15,0x58,0x43,0x91,0x9D,0x00,0xF8,0xBC,0x9C,0x9F,0xC5,0xF8,0xD5,0x2A,0x5A,0xB9}, "8jQ|HNcC+h`9,S{+8)s#.p<U4JB4U;#GXDCGAO/gf3HEV#[B4%`XH9wB.d)u,&%OJP?fsP9y-QD196aDW>k`Tn@K6a9;a4UzF7"},
		{true, {0xE3,0x23,0x09,0x22,0xA2,0x15,0xDE,0xF5,0xFF,0x67,0x76,0xD2,0xCE,0xEB,0xE8,0x77,0x7F,0xA9,0x88,0x93}, "_BG\"!pt4+y_.e!Pj# ]!7dhdl\\'6\"GCv(YMM[wCo+A4~^1]J\"9,[!c*L/R]vJUe^RPMEo|/DTo!ha<y'gt'CXb\"uhTk==C?Sq'*"},
		{true, {0x37,0xE6,0x73,0x79,0x53,0x31,0x61,0xE5,0x82,0xBB,0x9E,0x2D,0x55,0x69,0xEC,0xE2,0x07,0xF9,0xD3,0x44}, "/VkU0]f~\"<p{:dVsJfy,U(Fx:?;6>|>vk.D:svP{i3X,'m1`\\gs4Cdr-&sBJDLw]u.>iye3FAwZ5~uRqepA+QkFQ5mY'6f5lQjuI"},
		{true, {0xFB,0x26,0x1F,0xDD,0x70,0xC6,0x2A,0x12,0x66,0xAC,0xBC,0xFC,0x22,0xEA,0xF6,0x30,0x42,0x91,0xFE,0x44}, "3H#5',n)^1 `vZMH?aZGpZ',|q p<,-^-_<IJ7#nVp8KGUmd&`Qr!akaT:AeDB\"J@}})U.94}l)D9W@\"73f#t{;RIY!h}P1 F['Zl"},
		{true, {0xDD,0x44,0x08,0xE7,0x50,0x8E,0x06,0xA2,0xF0,0xB2,0xD9,0x17,0x83,0xC1,0xA8,0x70,0x96,0x8A,0xFD,0x78}, "=g6`(B2[)Mu0Aym'pBg08XE>ddr#nFE{'B7aFSp.z21La|U-&-$^/QnD8V6<X5JrD2@QW<AcPUO\\INb{/A~\\p~akyQP>DEzgM5F}oU"},
		{true, {0x57,0x6C,0x09,0x9E,0x3A,0xAA,0x44,0xD6,0x09,0x42,0xE3,0x65,0xD0,0x38,0x9F,0x77,0xB7,0x7A,0x90,0xD9}, "_jDD;? h~Sv1XQ\"u;i;VJDuBbpD4+$m$i:jZvvC0Lvs@*R~A#M3, HXQZ'N#P%H$I0a:rKanzM'jA%V\"p5}/puhl8#vkd92c<Nw4AsK"},
		{true, {0x74,0xB7,0x1D,0x05,0x47,0x6E,0xBE,0x82,0xA6,0x7E,0x4E,0xC0,0x89,0x57,0xBB,0x94,0x2B,0x35,0xD0,0xD9}, "zo&gwFM{R,58PKX<@+Dfvdg#X|\\Xc3ue/@U~u+t}d zBAmCI9'<g|s|I17:U!IME]:>B\"yV)ZsK[4+]yVBocPu)x/Fsi($$xmH?WndEM"},
		{true, {0xE3,0xA4,0x28,0x9E,0x96,0x6F,0xF2,0x17,0xAF,0x81,0x13,0xDA,0x1F,0x94,0xC4,0x8B,0xCE,0xAD,0x94,0xF9}, "vmuxALB*fzZ631L\\j\"\\A+mio0WC;N0(g0-AKFm`pkkoI[4{r4K]8o*+!x=FC5a=:c)8d!p4U#c(9Y?^3Wc$C5t f]9o!8-Iiwv!5@255d"},
		{true, {0x80,0xD0,0x47,0xD6,0x6E,0xB6,0x14,0x23,0xF1,0x4A,0x83,0xE4,0xAD,0x3F,0xAA,0xC7,0x0E,0x5C,0xCB,0xBA}, "(O@\\:S3ILVw5@Gz9RurLwH6L|^<o\"&(:m+mlgosIuLusU.iK2`EX'S}r1iz0tt8<99)4V\"\"AZR3_fPB}8AGS<(zlp 2 lh5S<ak1n{zT^O"},
		{true, {0x99,0x55,0x2A,0xA7,0x6B,0x98,0x7D,0x05,0xCF,0xE4,0x53,0xB8,0x0A,0xF9,0xF5,0x07,0xA5,0x91,0x28,0x70}, "@O2|MC=mbZ7\"WVd`|XRVj^&x_v^Y:./F`*,{OOMS-kM\\G8EG|pWRPkL-)cC$u=1\"~L\"EpBA4>H7#g3y$O{C}t^7zd8!lBpB1l}? cNa(J@Q"},
		{true, {0xAB,0x0F,0x2B,0x8A,0x39,0x16,0x5A,0x92,0x08,0xCB,0x1D,0x16,0xC7,0x08,0xDA,0x6D,0x97,0x33,0xFB,0xA1}, "J}xl!r])Jai^V'eZF@:YwM\\j%pl(8#'-Cz8<0LQ_D)Z=+6W$rX3Nr5KFUM'\"xH\"Lo/jYXI-i$zt11oP|Y2YY>]YmrbYg~C,vaNH9'Ze=4br5"},
		{true, {0x32,0x8A,0xAA,0xBB,0x04,0x46,0x34,0x74,0xAC,0x9B,0x34,0xD8,0xF0,0x5F,0x2D,0xF7,0x8A,0xFD,0xEA,0x21}, "Sv%h#I=mYk@*B(mk^!t7eKKm:czdxAP~sY!T&zKUWO$3\\9)l@1PsxsOIbx*~n{E u[e]zX<3yi,z~7 9?qC,A.;9BED=D{/c;i}H>3vT wTd/"},
		{true, {0xB4,0xB5,0x31,0x83,0x0F,0x9C,0x97,0x5B,0xEC,0x7C,0x0A,0xEA,0x74,0x66,0xA8,0x35,0xB7,0x85,0x6F,0x4B}, "1^QDqvgoTyc;C HpCG`6Q^pF]tKh$Gh?IJPW%Ne/}F+ollAY>Bn{#&~#gpg5j%3i|_yjJ</szrl_/s4ga{Ur>#MD0$a4msW1GY-_.I[3tF>7dy"},
		{true, {0x25,0x98,0x86,0x74,0xC8,0x8B,0xB0,0xE5,0x95,0x15,0xE7,0x74,0x3F,0xC0,0xC3,0x3A,0x45,0xB6,0x19,0x54}, "h`A'-)`QRFC'`/!oV|5IAn>4rFJ)ZqgB#5eBrW9/Z0pMu*/y,r9oAZ,buZr#x!;:bx)B//T1y:KX6yd\\)'<,%*g!^h=(b$E[4@GdZB;HCrx.FL7"},
		{true, {0xCB,0x29,0x15,0xF7,0x42,0xC0,0xC2,0x76,0xB9,0x36,0x13,0x4D,0x6D,0x4C,0xA6,0x4F,0x59,0x9C,0x73,0xA3}, "y[V$h7#<?q5r_B$<v|n@/FK>}s&=L i~hz\"#<Vj]{iQb5BJVS=$R}fix,{OH,_'[AoNi;> &K6T1xaP|RI;}Bzw]S2\\O=\"!}j\"R]hpce_BguTmc?"},
		{true, {0x0E,0xF4,0xDF,0x86,0x70,0xDD,0x4C,0xD3,0x7D,0x13,0x91,0x95,0x52,0x1A,0x5C,0x40,0x74,0x65,0xDC,0x08}, "<r0%^~83!Y:KXxGV!OkV.M;qS*eOxYG0a0S3L}ZywaN:u\"N}rhv/vuSSOgV&\\kde2^;MLou41{a&\"2lk6>/np5*]mvH-vx/?rp!ye@+))YwU>-(d-"},
		{true, {0x09,0x4C,0x4A,0x58,0xFB,0xF9,0x93,0x08,0xAD,0xE1,0x0F,0xB3,0x7A,0x86,0x5F,0x7B,0xAB,0x0C,0x9F,0x91}, ">[Ncg|^l ~=-vWXlBPx0a2t:-rt}T4(I,wPKmtxT^Sv'!m8ploI2Q%zWjhY!8$a,9H_;sL@Y:p+JkaM[JaGS\\qi=@RX3cD|QRiY'/gd)k\"v?03Br}N"},
		{true, {0x64,0x8D,0x64,0xF8,0xB6,0xED,0xD8,0x1C,0x64,0x69,0x8C,0x3C,0xFB,0x92,0x36,0x95,0xD1,0xF4,0x24,0x62}, "z^P.|cj/Q}1IRRg(s,<GyT1W6)&Ev\"TPWd75CIW)DpmLw/ {^t-GCyn_(_sJc)@rDxOm.j3?)bDeyD_8}aXv5j>l ,wi7PL~_+w$St2eZJt6V+wlLO7"},
		{true, {0xF5,0x43,0x75,0xAD,0x5E,0x2F,0x60,0x6D,0xB1,0x4C,0x08,0x72,0xF0,0xD8,0x53,0xCC,0x5D,0x82,0xEB,0x6B}, "/%CV~!7b#Ri6hyW$QJl$2eLfj>/>+IKniA/~|[b.:N--e%u@F].p{%Tte|r[]xRBkG@RgZtiwkTvlqdAen2SGs)yRmhVwG@v.6OW>^m2,Kii74t<!R~L"},
		{true, {0x12,0x40,0x4A,0xC9,0x0F,0xCE,0xB6,0x59,0x27,0x84,0x1D,0xA3,0x7C,0x46,0xE9,0xBD,0xA6,0x2F,0x19,0xF6}, "~,H6^NP7c:fM/ho#5 9g<Cvdj}ed(,3?~tH4R*i\"Lkqz`=1Mjb<$5yOcL`!75Q!bG5xmf_.$j6AH$GpEh\"l3Pki%,$Z{/mQ+Euc1/c:DkO!v0bn<wnYvi"},
		{true, {0xF4,0xB6,0x80,0x9F,0x95,0x74,0x3A,0x45,0xFA,0x8B,0x1F,0xA5,0x1C,0xFB,0xC8,0xED,0x19,0xD3,0xAD,0xD9}, " 4:*|g SioQu?Avofkd@tBI@XjFMUAI0x[EQ>DULGOk|]66jQW9&nBf(})d6C!Sk4`3XcTLLw #KC#5fX.xFo^!\"$7#1*q[8uONtj~P:\"h0z3! Rnb.%:y"},
		{true, {0xF0,0x59,0x34,0x87,0xF9,0x6B,0x4F,0xD0,0x53,0xDA,0x55,0xE0,0xBD,0x90,0x47,0x7F,0x9B,0x6E,0x68,0x7F}, "B/\"(]`m][z 4X_lp6w@[n]k%'KWHJ<tq^[=0k&ueiof:{C1$SlZk^Wr:Dzeql3AxE*X+5U;l%1_g/`&&=v-H;a-TPfRiikbyf&_ FXIPSHype8,D!;*P(`m"},
		{true, {0x2F,0x8B,0x77,0x6F,0x55,0xE0,0x87,0xB7,0x99,0xD5,0x07,0x06,0xCC,0x8B,0xA5,0x75,0x71,0xE5,0x6E,0xFF}, "=|w{3S&2 `;QR[eSHfq\"VeqrGHK9-EXTd)/jj]E[,.%nsMTP:7hP]1p\\JJn/pc_\"`\\XE4NPz>FN3N6SC/|hfy80%y@#V5_DkI$W8Y$5+F`n7hX:8'RZt`4vp"},
		{true, {0x9A,0xA7,0x5D,0x97,0x60,0x03,0x48,0x69,0xBB,0x63,0xD2,0x7A,0x4C,0x3A,0xA4,0x6C,0x4B,0x58,0xF5,0xD4}, "Ur>r^R@+,.{Z<)Xxai#z=JAQ*uD{}7FGq`xPHMcwxR/~~zgIG*~PL3yjhT${lVLehl/=(8K>yv\"zC$9NVH&m!lW.)3ti-{g1uun[\"3]\\[Lbg UB ~UagPzlg/"},
		{true, {0x4A,0x4B,0xAD,0x72,0xC8,0x01,0xF7,0x79,0xDB,0xE4,0x48,0x5A,0xD7,0x45,0x18,0xEA,0xA6,0x8F,0x9D,0x6E}, "[mV8_@w)TW>)9De6J2*F%GJ5GtS7QKn\"9)2-@xp*.Atc[R:HF%7x5QJweR+|{DdR=2nH_3H5bSK-t!}!MTPHy^z7c3\"pl-d,Sf.uq>\"!Yy*>ZttpID3jLu>d<~"},
		{true, {0xC9,0x9B,0xBD,0xD9,0x5B,0xFF,0xAB,0x5C,0x45,0x0E,0xBA,0x14,0x7D,0x3D,0x9A,0xB4,0x3C,0xE7,0x9F,0xBC}, "0I*9jlf%8`|Q80BsGR4*MjZPLGd~8@\")viKk5ZPOnf,m]>p!M@4V[s'N6m)oD)o,y\"f5_q^I7l/qkH5#lFEz~JR~kvjf,[\\eU~/(T@?v?M`J9O<gaF2VlXf\")5#"},
		{true, {0xE9,0x2D,0x11,0xC5,0x2A,0x77,0xCA,0xAD,0xEB,0xAC,0xE5,0x41,0xD2,0x76,0xA3,0x2D,0x24,0x4C,0x1A,0x50}, "-e<`VK2l#X4V0YViVZShf7LM@-D0`C>4Jl(l${-6*2%UVlqt(uduX`+o*N}$-H-r~,{b8sc<!&\\uf0zUzmk3{bRNg->f>[po/xSB@fuK8lv~nq6Q2xH },<^;!tx"},
		{true, {0x68,0x43,0x66,0xB6,0x93,0x56,0x5F,0x4D,0x24,0x8F,0xEA,0xE4,0x74,0xA8,0x90,0xD0,0x60,0xCA,0x0F,0xB0}, "\\WyTPch-u9|z\\%:sK,~Td7co6O1:o)t}>.TSfi=(\\H[IEP[>zMQ)PBv'&^U,e?(Buj1;p_u'\"5l*THUbK-{+cN$TPll1{bMln4@Vfw{Xy*lS6+Fw :`D>#3\\uD,Hp"},
		{true, {0x70,0x9A,0xA6,0x93,0xBD,0x12,0x1A,0x6B,0x43,0x06,0xD2,0xB6,0x71,0xEE,0xC4,0x1B,0xAD,0x92,0xEE,0xDB}, "}XWNb%ba6h\\qG?!-5x'R}S93I>mcj6+FTKy c4fE\\](.1uD;qHMV]!qV\\HyvF;Yr:KDFcc<is?4$?nFe#w6\\+4]gLCgDWNb0Z&fD\\Ve<\\wM{Sdd_vIQHBgY1W#5kvW"},
		{true, {0x23,0x1A,0xCC,0x30,0x8E,0x6A,0x4E,0xA8,0x0E,0x18,0x08,0x8B,0xF3,0x27,0xFE,0xD0,0xE4,0x6F,0xE4,0xF5}, "=\\PVDEXdkTOQX+-nEer=*K_Ce4U\"UFxZP#\\Pjx9'9 Uk _>M36r1n{u|vM0+8aFAO|a<]^EIRF_ ^nr>6DFV3~jYm-|MZ|pGx!2kpBY@&Ols'*3Ccn}J\\>\\C.)as(1A"},
		{true, {0x12,0x90,0xBA,0x8D,0x7D,0x32,0x79,0x25,0x42,0x61,0x13,0xB2,0xD0,0x45,0x12,0xD7,0x5E,0x4E,0x20,0x7A}, ";/a7M/e\\`*@'_xA7]U}o#.\"[HL0m<TTO5-\\ XNGl8?g~`@O]bTm!t:|MG>G}#64gnq=FVzB$MEZW=.D:uoZ\\3:E~Z6Y'j&9duKTW24nvA2'.\"c7.kRn;Al3>}>khmFU>"},
	};
	uint8_t actualHash[HASH_LEN] = {};
	for (unsigned int i = 0; i < ARRAY_LENGTH(cases); i++) {
		TestCase &tc = cases[i];
		Ripemd160::getHash(reinterpret_cast<const uint8_t*>(tc.message), strlen(tc.message), actualHash);
		if ((memcmp(actualHash, tc.expectedHash, HASH_LEN) == 0) != tc.matches)
			goto fail;
	}
	
	// Binary test vectors
	{ uint8_t expectHash[] = {0x9C,0x11,0x85,0xA5,0xC5,0xE9,0xFC,0x54,0x61,0x28,0x08,0x97,0x7E,0xE8,0xF5,0x48,0xB2,0x25,0x8D,0x31}, msg[] = {}                                                                               ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0xC8,0x1B,0x94,0x93,0x34,0x20,0x22,0x1A,0x7A,0xC0,0x04,0xA9,0x02,0x42,0xD8,0xB1,0xD3,0xE5,0x07,0x0D}, msg[] = {0x00}                                                                           ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0xF7,0xD5,0x0D,0x12,0x0D,0x65,0x5B,0xE4,0xB8,0x87,0x50,0x87,0x3E,0x00,0xCA,0xF1,0x47,0xF2,0x8A,0x1B}, msg[] = {0x00,0x00}                                                                      ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x1C,0x45,0x1C,0xEA,0x27,0x41,0x37,0x36,0x4F,0xD8,0xD3,0xD1,0xF8,0x99,0x0B,0xB0,0x31,0x01,0xEB,0xCA}, msg[] = {0x00,0x24,0x00}                                                                 ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x1E,0x2F,0x61,0x38,0xA0,0xF0,0x61,0x70,0x44,0x08,0xEB,0x66,0xE2,0xFB,0xA6,0x5C,0x38,0x0E,0xAE,0x38}, msg[] = {0xFF,0x80,0xC9,0x5E}                                                            ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x47,0xC2,0x91,0x5D,0xE1,0xB3,0x26,0xF0,0x65,0xF5,0x4C,0xEA,0x2D,0x9F,0xFD,0x11,0x4A,0x07,0xE0,0xC4}, msg[] = {0x26,0xF9,0x6E,0x8E,0x87}                                                       ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x5F,0xCC,0xE2,0xFC,0x51,0xD1,0xCD,0xB1,0x1D,0xF0,0xEA,0xE5,0xB3,0x60,0x0C,0x4A,0x12,0x2B,0xEA,0xA9}, msg[] = {0xCA,0x1C,0x3D,0x86,0x8B,0xB0}                                                  ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0xFD,0x07,0x9B,0x14,0x72,0x2B,0x89,0x19,0x86,0x77,0xB1,0x3A,0xF2,0x36,0x6F,0x93,0x88,0xD0,0x5D,0x49}, msg[] = {0x40,0x51,0xCA,0x93,0x7F,0xD2,0x77}                                             ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0xB8,0x95,0xD2,0xBE,0xB8,0x01,0xEC,0x92,0x66,0x68,0xBE,0x6D,0x80,0x70,0x38,0xE1,0x5C,0xFC,0xA6,0xE0}, msg[] = {0x9F,0x72,0x09,0x99,0xFC,0xCF,0x0E,0xA1}                                        ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0xD3,0xA1,0xC9,0xD7,0x00,0x90,0x8A,0x9C,0x7C,0xED,0xCC,0x71,0x7C,0xD9,0x37,0x91,0x86,0x21,0x3B,0x6E}, msg[] = {0xD2,0x39,0x8D,0x34,0x1E,0x81,0x30,0x2E,0x79}                                   ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x23,0xFF,0xC9,0x77,0x25,0x6C,0xBA,0x56,0xFC,0x22,0xC8,0xED,0xF2,0xBD,0x52,0x4B,0x74,0x7B,0x6B,0x86}, msg[] = {0x16,0xB4,0x65,0x59,0x41,0x45,0xC4,0x39,0xD3,0xFA}                              ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x36,0xF6,0x68,0xFE,0x3C,0x19,0xA9,0xBE,0x46,0x65,0x37,0x43,0x22,0xF1,0xD1,0x66,0x6D,0x54,0x13,0xE8}, msg[] = {0xA7,0x9A,0x11,0x11,0x6C,0x71,0x40,0x18,0x29,0xE2,0x86}                         ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x7D,0x19,0x8C,0x7B,0x43,0x2D,0x00,0x19,0xF4,0x4A,0x05,0x68,0x7D,0xCE,0x0D,0x52,0x51,0xED,0x2F,0x71}, msg[] = {0x74,0x1C,0x18,0x9E,0x1E,0x70,0x3A,0xDE,0x8C,0x7D,0xD8,0x23}                    ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x6E,0x48,0x33,0x3C,0xAE,0x83,0x73,0x4A,0x74,0x57,0xD9,0x45,0xB2,0xF5,0x92,0x80,0x29,0xB5,0x7D,0xBD}, msg[] = {0x02,0x07,0x35,0x43,0x50,0xB3,0x5C,0x07,0x72,0x2F,0xA4,0xAF,0xB3}               ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0xA0,0x9E,0xC3,0x52,0xC3,0xAD,0xC7,0x4F,0x5E,0xED,0x4E,0xDB,0x3D,0xB7,0x64,0xF4,0x4B,0x8F,0xE2,0xCD}, msg[] = {0x94,0xE8,0xD7,0x79,0x65,0xA1,0xE0,0xE6,0x86,0x74,0x9A,0xB4,0x59,0xD8}          ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0x0C,0xD9,0x98,0x10,0x3F,0x24,0xA3,0xE9,0xF7,0x49,0xE8,0x9C,0x2D,0x15,0xF0,0x03,0xCF,0x19,0xF1,0x7C}, msg[] = {0x64,0xAE,0x32,0xF6,0x97,0x6A,0xC0,0x01,0x97,0x44,0xC4,0x8D,0xFB,0x0F,0x4F}     ;  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	{ uint8_t expectHash[] = {0xB7,0x8A,0x64,0x5A,0x28,0xE9,0x46,0x64,0xC0,0x8F,0xF9,0x8C,0x51,0x53,0x15,0xD9,0x1E,0xB6,0x88,0xC0}, msg[] = {0x1B,0x62,0x80,0xE1,0x5B,0xA6,0x1D,0x91,0xB6,0x23,0x49,0x0A,0x49,0x58,0x9D,0x83};  Ripemd160::getHash(msg, ARRAY_LENGTH(msg), actualHash);  if (memcmp(actualHash, expectHash, HASH_LEN) != 0) goto fail; }
	
	// Epilog
	printf("Test passed\n");
	return 0;
fail:
	printf("Test failed\n");
	return 1;
}


#undef HASH_LEN
